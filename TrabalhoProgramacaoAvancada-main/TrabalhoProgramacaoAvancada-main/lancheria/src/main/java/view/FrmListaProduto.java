/*
 * Tela de listagem, alteração, exclusão, cadastro de categorias
 */
package view;


import dal.DAO;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Produto;

/**
 *
 * @author maria
 */
public class FrmListaProduto extends javax.swing.JFrame {

    /**
     * Creates new form FListaDeLivros
     */
    public FrmListaProduto() {
        initComponents();

    }

    private void atualizarComboCat() {
        try {
            //popula combo das categorias
            DAO<Categoria> daoc = new DAO<>(Categoria.class);

            List<Categoria> lstCat = daoc.consultar();
            cb_categoria.removeAllItems();
            for (int c = 0; c < lstCat.size(); c++) {
                cb_categoria.addItem(lstCat.get(c).getDescricao());
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btn_fechar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_produto = new javax.swing.JTable();
        btn_alterar = new javax.swing.JButton();
        btn_remover = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        btn_sair = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_produto = new javax.swing.JTextField();
        cb_categoria = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txt_preco = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Título", "Autor", "Categoria", "Data Lcto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
        }

        btn_fechar.setText("Fechar");
        btn_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fecharActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biblioteca");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Produtos"));

        tb_produto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Categoria", "Preço"
            }
        ));
        jScrollPane1.setViewportView(tb_produto);

        btn_alterar.setText("Alterar");
        btn_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarActionPerformed(evt);
            }
        });

        btn_remover.setText("Remover");
        btn_remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removerActionPerformed(evt);
            }
        });

        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_sair.setText("Sair");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });

        jLabel1.setText("Produto:");

        cb_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_categoriaActionPerformed(evt);
            }
        });

        jLabel2.setText("Categoria:");

        jLabel3.setText("Preço:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_preco, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_remover, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_preco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btn_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_alterar)
                    .addComponent(btn_remover)
                    .addComponent(btn_sair))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
     * Funcionalidade do botão Alterar, ao selecionar uma categoria das listadas
     * e informar uma novo nome de categoria é realizado a alteração no banco
     *
     * @param evt
     */
    private void btn_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarActionPerformed
        if (tb_produto.getSelectedRow() != -1) {
            
          //seta dados selecionados nos campos para edição
          txt_produto.setText(tb_produto.getValueAt(tb_produto.getSelectedRow(), 0).toString());
          txt_preco.setText(tb_produto.getValueAt(tb_produto.getSelectedRow(), 2).toString());
          cb_categoria.setSelectedItem(tb_produto.getValueAt(tb_produto.getSelectedRow(), 1).toString());
          
        } else {
            //caso o usuário clicar no botão alterar sem selecionar nenhum item na tabela
            JOptionPane.showMessageDialog(this, "Selecione uma categoria para alterar", null, JOptionPane.WARNING_MESSAGE, null);
        }
    }//GEN-LAST:event_btn_alterarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        atualizarComboCat();
        try {
            //ao abrir a tela atualiza tabela de categorias
            preencheTabela();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowOpened

    private void btn_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fecharActionPerformed
//       this.setDefaultCloseOperation(this.EXIT_ON_CLOSE);


    }//GEN-LAST:event_btn_fecharActionPerformed

    /**
     * Funcionalidade do botão Remover que ao selecionar uma categoria a mesma é
     * removida do banco
     *
     * @param evt
     */
    private void btn_removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removerActionPerformed
        //valida se possui um item selecionado na tabela
        if (tb_produto.getSelectedRow() != -1) {

            try {
                
                DAO<Produto> daop = new DAO<>(Produto.class);
                
                //popula objeto categoria de acordo com a categoria selecionada na tabela em tela
                 List<Produto> lstProd = daop.consultar("descricao = '" + tb_produto.getValueAt(tb_produto.getSelectedRow(), 0).toString() + "'");

                //chama o método deletar informando o objeto com a categoria selecionada
                for (int i = 0; i < lstProd.size(); i++){
                          boolean removido = daop.excluir(lstProd.get(i).getId());
                try {
                    //se removido é true notifica o usuário e atualiza a tabela em tela
                    if (removido) {
                        JOptionPane.showMessageDialog(this, "Produto removido com sucesso", null, JOptionPane.INFORMATION_MESSAGE, null);
                        preencheTabela();
                    }

                } catch (IOException ex) {
                    Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            
                }
          
} catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para remover", null, JOptionPane.WARNING_MESSAGE, null);

        }

    }//GEN-LAST:event_btn_removerActionPerformed
    /**
     * Funcionalidade do botão Adicionar, ao informar o nome do produto e a
     * categoria realiza a inserção no banco de dados
     *
     * @param evt
     */
    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        try {
            DAO<Produto> daop = new DAO<>(Produto.class);
            DAO<Categoria> daoc = new DAO<>(Categoria.class);

            String nomeProduto = txt_produto.getText();
            String preco = txt_preco.getText();
            String categoriaSel = cb_categoria.getSelectedItem().toString();

            //popula a clausula where que será usada na consulta pela descricao da categoria para retornar o id
            String where = "descricao = " + "'" + categoriaSel + "' ";

            //lista a uf 
            List<Categoria> lstCat = null;
            try {
                lstCat = daoc.consultar(where);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (int i = 0; i < lstCat.size(); i++) {
                //adicionar diretamente o objeto
                Integer cat_id = lstCat.get(i).getId();
               
                Produto p = new Produto();

                if (tb_produto.getSelectedRow() == -1) {   //registro novo  
                    System.out.println("entro if 1");
                    p.setCategoria_id(cat_id);
                    p.setDescricao(nomeProduto);
                    p.setPreco(Double.valueOf(preco));
                
                }else{  //registro selecionado
                        System.out.println("entro if 2");

                        List<Produto> lstProd = daop.consultar("descricao = '" + tb_produto.getValueAt(tb_produto.getSelectedRow(), 0).toString() + "'");
                 
                           for (int pr = 0; pr < lstProd.size(); pr++) { 
                                p.setId(lstProd.get(pr).getId());
                                System.out.println(lstProd.get(pr).getId());
                                if(!cat_id.equals(lstProd.get(pr).getCategoria_id()))
                                    p.setCategoria_id(cat_id);
                                else
                                    p.setCategoria_id(lstProd.get(pr).getCategoria_id());
                                if(!nomeProduto.equals(lstProd.get(pr).getDescricao()))
                                    p.setDescricao(nomeProduto);
                                else
                                    p.setDescricao(lstProd.get(pr).getDescricao());
                                if(!preco.equals(lstProd.get(pr).getPreco()))
                                    p.setPreco(Double.valueOf(preco));
                                else
                                      p.setPreco(lstProd.get(pr).getPreco());
                           }
                }
                boolean salvo = daop.salvar(p);
          
                if (salvo) {
                    JOptionPane.showMessageDialog(this, "Produto cadastrado com sucesso", null, JOptionPane.INFORMATION_MESSAGE, null);
                    //limpa campos
                    txt_preco.setText("");
                    txt_produto.setText("");
                    try {
                        preencheTabela();
                    } catch (IOException | ClassNotFoundException ex) {
                        Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_salvarActionPerformed
    /**
     * Funcionalidade do botão Sair, encerra o processo.
     *
     * @param evt
     */
    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_sairActionPerformed

    private void cb_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_categoriaActionPerformed


    }//GEN-LAST:event_cb_categoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmListaProduto().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alterar;
    private javax.swing.JButton btn_fechar;
    private javax.swing.JButton btn_remover;
    private javax.swing.JButton btn_sair;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cb_categoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable tb_produto;
    private javax.swing.JTextField txt_preco;
    private javax.swing.JTextField txt_produto;
    // End of variables declaration//GEN-END:variables

    /**
     * Atualiza tabela que lista categorias
     *
     * @throws IOException
     * @throws FileNotFoundException
     * @throws ClassNotFoundException
     */
    public void preencheTabela() throws IOException, FileNotFoundException, ClassNotFoundException {

        try {
            DefaultTableModel modelo = (DefaultTableModel) tb_produto.getModel();

            modelo.setNumRows(0);

            DAO<Produto> daop = new DAO<>(Produto.class);
            DAO<Categoria> daoc = new DAO<>(Categoria.class);

            for (Produto p : daop.consultar()) {
                String where = "id = " + "'" + p.getCategoria_id() + "' ";
                List<Categoria> lstCat = daoc.consultar(where);
                for (int i = 0; i < lstCat.size(); i++) {
                    //adicionar diretamente o objeto
                    String cat = lstCat.get(i).getDescricao();
                    modelo.addRow(new Object[]{
                        p.getDescricao(),
                        cat,
                        p.getPreco().doubleValue()

                    });
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmListaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
